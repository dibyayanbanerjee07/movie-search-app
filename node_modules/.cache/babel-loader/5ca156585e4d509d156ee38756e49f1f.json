{"ast":null,"code":"import _slicedToArray from \"D:\\\\React_Pro\\\\Movie-search-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\React_Pro\\\\Movie-search-app\\\\src\\\\Detail.js\";\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\nimport Chip from \"@material-ui/core/Chip\";\n\nvar Detail = function Detail(props) {\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      poster = _useState2[0],\n      setposter = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      year = _useState4[0],\n      setyear = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      genre = _useState6[0],\n      setgenre = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      plot = _useState8[0],\n      setplot = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      title = _useState10[0],\n      settitle = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      imdbrate = _useState12[0],\n      setimdbrate = _useState12[1];\n\n  axios.get(\"https://www.omdbapi.com/?apikey=4eb65943&i=\".concat(props.imval)).then(function (res) {\n    setposter(res.data.Poster);\n    setyear(\"(\" + res.data.Year + \")\");\n    setgenre(res.data.Genre);\n    setplot(res.data.Plot);\n    settitle(res.data.Title);\n    setimdbrate(\"Imdb: \" + res.data.imdbRating);\n  });\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Dialog, {\n    fullWidth: \"true\",\n    maxWidth: \"sm\",\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    className: \"moviePosterDialog\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: poster,\n    maxWidth: \"sm\",\n    className: \"moviePosterDetail\",\n    alt: \"Poster\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, title), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    id: \"alert-dialog-description\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: \"12px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, genre, \" \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 23\n    }\n  }, year)), /*#__PURE__*/React.createElement(Chip, {\n    label: imdbrate,\n    color: \"primary\",\n    style: {\n      float: \"right\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, plot))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    autoFocus: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Close\"))));\n};\n\nexport default Detail;","map":{"version":3,"sources":["D:/React_Pro/Movie-search-app/src/Detail.js"],"names":["React","useState","axios","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","Chip","Detail","props","open","setOpen","poster","setposter","year","setyear","genre","setgenre","plot","setplot","title","settitle","imdbrate","setimdbrate","get","imval","then","res","data","Poster","Year","Genre","Plot","Title","imdbRating","handleClose","fontSize","float"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nconst Detail = (props) => {\r\n  const [open, setOpen] = React.useState(true);\r\n  const [poster, setposter] = useState();\r\n  const [year, setyear] = useState();\r\n  const [genre, setgenre] = useState();\r\n  const [plot, setplot] = useState();\r\n  const [title, settitle] = useState();\r\n  const [imdbrate, setimdbrate] = useState();\r\n \r\n\r\n  axios\r\n    .get(`https://www.omdbapi.com/?apikey=4eb65943&i=${props.imval}`)\r\n    .then((res) => {\r\n      setposter(res.data.Poster);\r\n      setyear(\"(\" + res.data.Year + \")\");\r\n      setgenre(res.data.Genre);\r\n      setplot(res.data.Plot);\r\n      settitle(res.data.Title);\r\n      setimdbrate(\"Imdb: \" + res.data.imdbRating);\r\n      \r\n    });\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        fullWidth=\"true\"\r\n        maxWidth=\"sm\"\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        className=\"moviePosterDialog\"\r\n      >\r\n        <img\r\n          src={poster}\r\n          maxWidth=\"sm\"\r\n          className=\"moviePosterDetail\"\r\n          alt=\"Poster\"\r\n        />\r\n        <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\r\n\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <span style={{ fontSize: \"12px\" }}>\r\n              {genre} <b>{year}</b>\r\n            </span>\r\n           \r\n            <Chip label={imdbrate} color=\"primary\" style={{ float: \"right\" }} />\r\n            <hr />\r\n            <span>{plot}</span>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\nexport default Detail;\r\n"]},"metadata":{},"sourceType":"module"}